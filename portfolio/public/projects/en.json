[
    {
      "id": "portfolio-app",
      "title": "Portfolio App",
      "description": "Personal Angular portfolio with localization, certificates, and CV. Designed with a retrowave aesthetic.",
      "image": "",
      "tags": ["Angular", "TypeScript", "Scss", "Responsive", "Localization", "Retrowave"],
      "youtubeUrl": "",
      "sourceUrl": "https://github.com/keeroll/Portfolio",
      "liveUrl": "",
      "downloadUrl": "",
      "detailedDescription": [
        {
          "title": "Overview",
          "content": "My personal portfolio web app created using Angular 20. It showcases projects, certificates, and includes my CV in multiple languages. The site is styled with a retrowave-inspired theme and is fully responsive."
        },
        {
          "title": "Key Features",
          "content": "Supports internationalization (i18n) with multiple language options, responsive layout for all devices, modular and scalable architecture, and smooth visual transitions."
        },
        {
          "title": "Technical Stack",
          "content": "Angular 20, TypeScript, SCSS, Angular Router, modern CSS (Flexbox, Grid). Built using Angular best practices for production-ready deployment."
        }
      ]
    },
    {
      "id": "clickoin",
      "title": "Clickoin",
      "description": "Clicker game with skins, rare drops, and Steam features. Built in Unity with full gamedev cycle.",
      "image": "project-img/clickoin.jpg",
      "tags": ["Unity", "C#", "Steam", "Game Dev", "Indie", "Steamworks.NET", "Game Design"],
      "youtubeUrl": "https://www.youtube.com/embed/rMiqV9_fbdM?si=snhzmmDeY9I_9bom",
      "sourceUrl": "",
      "liveUrl": "https://store.steampowered.com/app/3401350/Clickoin/",
      "downloadUrl": "",
      "detailedDescription": [
        {
          "title": "Game Overview",
          "content": "Clickoin is a casual clicker game built with Unity where players earn coins, unlock skins, and receive time-based or achievement-based drops. Features include custom rarity logic, offline-safe drops, and full Steam integration."
        },
        {
          "title": "Development Process",
          "content": "I worked on game design, programming, and testing. Implemented Steam Cloud, Achievements, Inventory, and secure save encryption. Game loop iterated based on player feedback during playtests."
        }
      ]
    },
    {
        "id": "barcode-scanner",
        "title": "Barcode Scanner",
        "description": "Angular-based PWA to scan barcodes via Honeywell Captuvo on iOS using Cordova.",
        "image": "",
        "tags": ["Angular", "Ionic", "Cordova", "PWA", "Barcode", "Scanner"],
        "youtubeUrl": "",
        "sourceUrl": "https://github.com/keeroll/barcode-scanner",
        "liveUrl": "",
        "downloadUrl": "",
        "detailedDescription": [
          {
            "title": "Proof of Concept",
            "content": "This PWA was a prototype project created to explore integration between Angular/Ionic and Honeywell Captuvo barcode scanners on iOS using Cordova plugins."
          },
          {
            "title": "Technical Insights",
            "content": "Implemented basic scanner detection and data retrieval, explored plugin interface options, and tested real-time scanning capabilities with external hardware."
          }
        ]
      },
      {
        "id": "ukraine-weather-app",
        "title": "Ukraine Weather App",
        "description": "Simple Angular 7 app using OpenWeather API with SVG map to show conditions across Ukraine.",
        "image": "project-img/ukraine-weather-app.jpg",
        "tags": ["Angular", "TypeScript", "SVG", "API", "Weather"],
        "youtubeUrl": "https://www.youtube.com/embed/D0GMRD8ANL4?si=7c6VDdBJ482KALw2",
        "sourceUrl": "https://github.com/keeroll/web-systems-architecture-labs",
        "liveUrl": "",
        "downloadUrl": "",
        "detailedDescription": [
          {
            "title": "Project Overview",
            "content": "A single-page Angular application displaying current weather conditions across cities in Ukraine. Built with Angular 7 and integrated with OpenWeatherMap API."
          },
          {
            "title": "Key Features",
            "content": "Data visualization on an interactive SVG map of Ukraine, API consumption with HTTPClient."
          }
        ]
      },
    {
      "id": "simple-smart-house",
      "title": "Simple Smart House",
      "description": "Arduino-based IoT home system with sensors and Blynk mobile app integration.",
      "image": "project-img/simple-smart-house.jpg",
      "tags": ["IoT", "Arduino", "C++", "Smart Home", "Blynk"],
      "youtubeUrl": "https://www.youtube.com/embed/ulaSbHANYgE?si=ifQLTKkfaKFN_gZr",
      "sourceUrl": "https://github.com/keeroll/Simple-Smart-House",
      "liveUrl": "",
      "downloadUrl": "",
      "detailedDescription": [
        {
          "title": "Project Overview",
          "content": "My first IoT project built around Arduino Uno and various sensors to simulate a smart home. Used Blynk mobile app for remote control and monitoring."
        },
        {
          "title": "Hardware & Features",
          "content": "Included sensors: DHT11, RFID (RC522), infrared motion (HC-SR501), light sensor (LDR), and a servomotor. Used LEDs and resistors for interaction with lighting and movement logic."
        }
      ]
    },
    {
      "id": "time-travel-unity",
      "title": "Time Travel Unity Game",
      "description": "Unity 5 prototype game exploring time travel mechanics and puzzle interaction.",
      "image": "project-img/time-travel-unity.jpg",
      "tags": ["Unity", "C#", "Game Dev", "Time Travel"],
      "youtubeUrl": "https://www.youtube.com/embed/-GHlKoqbr1c?si=IrrRtuqVIALIky_l",
      "sourceUrl": "https://github.com/keeroll/Time_Travel_Unity5",
      "liveUrl": "",
      "downloadUrl": "https://github.com/keeroll/Time_Travel_Unity5/releases/tag/v0.0.1",
      "detailedDescription": [
        {
          "title": "Prototype Overview",
          "content": "Experimental Unity 5 game focused on simulating time travel. I tested various mechanics and effects for manipulating time within puzzles."
        },
        {
          "title": "Development Highlights",
          "content": "Used free 3D assets to prototype basic gameplay. Implemented time-rewind mechanics and visual distortion to reflect time shifts."
        }
      ]
    },
    {
      "id": "little-rts-game",
      "title": "Little RTS Game",
      "description": "Real-time strategy game built in Unity 5 as a test task for Enixan, featuring strategic gameplay mechanics.",
      "image": "project-img/little-rts-game.jpg",
      "tags": ["Unity", "C#", "Game Dev", "Strategy"],
      "youtubeUrl": "https://www.youtube.com/embed/Vlq5hsqTvvA?si=9fsObym6usx_k4b1",
      "sourceUrl": "https://github.com/keeroll/Little_RTS_Game_Unity5",
      "liveUrl": "",
      "downloadUrl": "https://github.com/keeroll/Little_RTS_Game_Unity5/releases/tag/v.0.0.1",
      "detailedDescription": [
        {
          "title": "Game Overview",
          "content": "A real-time strategy game developed as a test task for Enixan, featuring classic RTS mechanics including resource management, unit production, and tactical combat."
        },
        {
          "title": "Technical Features",
          "content": "Built with Unity 5, featuring AI pathfinding, unit behavior systems, resource management, and multiplayer-ready architecture. Demonstrates strong game development fundamentals."
        }
      ]
    },
    {
        "id": "fnaf-style-game",
        "title": "FNaF-Style Horror Game",
        "description": "Unity 5 horror game inspired by Five Nights at Freddy’s. Built following tutorials but extended with custom camera and pathfinding systems.",
        "image": "project-img/fnaf-style-game.jpg",
        "tags": ["Unity", "C#", "Game Dev", "Horror", "Fnaf"],
        "youtubeUrl": "https://www.youtube.com/embed/tMhB2fMfOM8?si=sTg05PQAxVdDms8s",
        "sourceUrl": "",
        "liveUrl": "",
        "downloadUrl": "https://github.com/keeroll/old-unity-projects/releases/tag/fnaf-build",
        "detailedDescription": [
          {
            "title": "Learning Focus",
            "content": "This project was inspired by the mechanics of FNaF and used primarily as a learning exercise to understand Unity’s camera system, scene management, and AI pathfinding."
          },
          {
            "title": "Key Features",
            "content": "Implemented basic AI that roams the environment based on a grid-based pathfinding system, camera switching logic for a security room simulation, and tension-building audio and light control."
          }
        ]
      },
      {
        "id": "solar-system-unity",
        "title": "Unity Solar System Explorer",
        "description": "An interactive 3D solar system simulation created in Unity 5, allowing free camera movement and orbiting planets.",
        "image": "project-img/solar-system-unity.jpg",
        "tags": ["Unity", "C#", "Game Dev", "Simulation", "Space"],
        "youtubeUrl": "https://www.youtube.com/embed/P_Ay0Ss23TQ?si=881YUPruOG6eC97P",
        "sourceUrl": "",
        "liveUrl": "",
        "downloadUrl": "https://github.com/keeroll/old-unity-projects/releases/tag/solar-system-build",
        "detailedDescription": [
          {
            "title": "Project Summary",
            "content": "Built as a space simulation sandbox where players can freely explore a simplified solar system with orbiting planets and rotation systems."
          },
          {
            "title": "Implementation Details",
            "content": "Used Unity's transform system to simulate orbital rotation, added basic camera control to fly through space, and styled planets with public domain textures."
          }
        ]
      },
    {
        "id": "atm-system",
        "title": "ATM System",
        "description": "Complete ATM management system built with C# WinForms and MS SQL Server for banking operations.",
        "image": "project-img/atm-system.jpg",
        "tags": ["C#", "Win Forms", "MS SQL", "CRUD", "Desktop"],
        "youtubeUrl": "https://www.youtube.com/embed/6hgoXhEa3I8?si=BydYPtpPzUg5v3yk",
        "sourceUrl": "https://github.com/keeroll/atm_system_cSharp",
        "liveUrl": "",
        "downloadUrl": "",
        "detailedDescription": [
          {
            "title": "System Overview",
            "content": "A comprehensive ATM management system that simulates real banking operations including account management, transactions, and security features."
          },
          {
            "title": "Technical Implementation",
            "content": "Built with C# WinForms for the user interface and MS SQL Server for data persistence. Features include user authentication, transaction processing, account management, and detailed reporting."
          }
        ]
      },
    {
      "id": "student-exams-db",
      "title": "Student Exams Score DB",
      "description": "Database management system for tracking student exam scores using C# WinForms and MS SQL Server.",
      "image": "project-img/student-exams-db.jpg",
      "tags": ["C#", "Win Forms", "MS SQL", "Database", "Desktop"],
      "youtubeUrl": "https://www.youtube.com/embed/RPXotjyF7gg?si=ZJmOM-iUEk_zWHzt",
      "sourceUrl": "https://github.com/keeroll/Student_Exams_Score_DB_CSharp_WF",
      "liveUrl": "",
      "downloadUrl": "",
      "detailedDescription": [
        {
          "title": "System Overview",
          "content": "A comprehensive database management system designed for educational institutions to track and manage student exam scores and academic performance."
        },
        {
          "title": "Features",
          "content": "Student registration, exam score tracking, grade calculation, performance analytics, and detailed reporting. Built with C# WinForms and MS SQL Server for robust data management."
        }
      ]
    },
    {
        "id": "text-formatter",
        "title": "Text Formatter",
        "description": "C# WPF application for text formatting and manipulation with a modern desktop interface.",
        "image": "",
        "tags": ["C#", "WPF", ".NET", "Desktop"],
        "youtubeUrl": "",
        "sourceUrl": "https://github.com/keeroll/Text-Formatter",
        "liveUrl": "",
        "downloadUrl": "",
        "detailedDescription": [
          {
            "title": "Application Overview",
            "content": "A desktop application built with C# WPF that provides advanced text formatting and manipulation capabilities."
          },
          {
            "title": "Key Features",
            "content": "Text case conversion, formatting options, find and replace functionality, syntax highlighting, and export capabilities. Built with MVVM pattern for maintainable code architecture."
          }
        ]
      }
  ]
  